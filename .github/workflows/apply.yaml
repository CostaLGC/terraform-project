name: Terraform Apply

on:
  workflow_dispatch: # Acionamento manual

jobs:
  meu_job:
    runs-on: ubuntu-latest
    env:
      TF_VERSION: "1.0.11"
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
    - name: Checkout do Código
      uses: actions/checkout@v2

    - name: Initialize Terraform
      run: terraform init     
    
    - name: Plan Terraform
      run: terraform plan

    #- name: Executar Terraform plan e capturar resultado
    #  run: |
    #    output=$(terraform plan)
    #    recursos_adicionar=$(echo "$output" | awk '/Plan:/ {print $2}')
    #    echo "$recursos_adicionar"
        
    - name: Terraform Apply
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        #if [ "$recursos_adicionar" != "0" ]; then
          echo .terraform/* > .gitignore 
          terraform output >> output.txt
          terraform apply -auto-approve
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${SSH_PRIVATE_KEY}"
          git remote add 1 git@github.com:costalgc/1.git
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git add terraform.tfstate
          git add output.txt
          git add .
          git commit -m "Terraform TF State via GitHub Actions"
          git push 1 main
        #else
          # Se a condição for falsa (ou seja, recursos_adicionar é igual a '0')
          # Não faz nada ou execute algum outro comando, dependendo do seu caso de uso
          echo "Não há recursos para aplicar."
        #fi
